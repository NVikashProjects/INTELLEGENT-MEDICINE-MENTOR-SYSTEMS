<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [D:\embedded project\IMMS.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image D:\embedded project\IMMS.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 524]: Last Updated: Mon Oct 14 12:56:37 2024
<BR><P>
<H3>Maximum Stack Usage =         40 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; Date_Time_Set &rArr; lcd_num &rArr;  lcd_num (Cycle)
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[26c6694]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[26c6568]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[26c6568]">NMI_Handler</a><BR>
 <LI><a href="#[26c652c]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[26c652c]">HardFault_Handler</a><BR>
 <LI><a href="#[26c64f0]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[26c64f0]">MemManage_Handler</a><BR>
 <LI><a href="#[26c64b4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[26c64b4]">BusFault_Handler</a><BR>
 <LI><a href="#[26c6478]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[26c6478]">UsageFault_Handler</a><BR>
 <LI><a href="#[26c643c]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[26c643c]">SVC_Handler</a><BR>
 <LI><a href="#[26c6400]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[26c6400]">DebugMon_Handler</a><BR>
 <LI><a href="#[26c63c4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[26c63c4]">PendSV_Handler</a><BR>
 <LI><a href="#[26c6388]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[26c6388]">SysTick_Handler</a><BR>
 <LI><a href="#[26c634c]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[26c634c]">ADC_IRQHandler</a><BR>
 <LI><a href="#[26c4d44]">lcd_num</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[26c4d44]">lcd_num</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[26c65a4]">Reset_Handler</a>
 <LI><a href="#[26c6568]">NMI_Handler</a>
 <LI><a href="#[26c652c]">HardFault_Handler</a>
 <LI><a href="#[26c64f0]">MemManage_Handler</a>
 <LI><a href="#[26c64b4]">BusFault_Handler</a>
 <LI><a href="#[26c6478]">UsageFault_Handler</a>
 <LI><a href="#[26c643c]">SVC_Handler</a>
 <LI><a href="#[26c6400]">DebugMon_Handler</a>
 <LI><a href="#[26c63c4]">PendSV_Handler</a>
 <LI><a href="#[26c6388]">SysTick_Handler</a>
 <LI><a href="#[26c5bcc]">WDT_IRQHandler</a>
 <LI><a href="#[26c5de8]">TIMER0_IRQHandler</a>
 <LI><a href="#[26c5dac]">TIMER1_IRQHandler</a>
 <LI><a href="#[26c5d70]">TIMER2_IRQHandler</a>
 <LI><a href="#[26c5d34]">TIMER3_IRQHandler</a>
 <LI><a href="#[26c5cf8]">UART0_IRQHandler</a>
 <LI><a href="#[26c5cbc]">UART1_IRQHandler</a>
 <LI><a href="#[26c5c80]">UART2_IRQHandler</a>
 <LI><a href="#[26c5c44]">UART3_IRQHandler</a>
 <LI><a href="#[26c5f8c]">PWM1_IRQHandler</a>
 <LI><a href="#[26c6130]">I2C0_IRQHandler</a>
 <LI><a href="#[26c60f4]">I2C1_IRQHandler</a>
 <LI><a href="#[26c60b8]">I2C2_IRQHandler</a>
 <LI><a href="#[26c5e9c]">SPI_IRQHandler</a>
 <LI><a href="#[26c5e60]">SSP0_IRQHandler</a>
 <LI><a href="#[26c5e24]">SSP1_IRQHandler</a>
 <LI><a href="#[26c6004]">PLL0_IRQHandler</a>
 <LI><a href="#[26c5ed8]">RTC_IRQHandler</a>
 <LI><a href="#[26c625c]">EINT0_IRQHandler</a>
 <LI><a href="#[26c6220]">EINT1_IRQHandler</a>
 <LI><a href="#[26c61e4]">EINT2_IRQHandler</a>
 <LI><a href="#[26c61a8]">EINT3_IRQHandler</a>
 <LI><a href="#[26c634c]">ADC_IRQHandler</a>
 <LI><a href="#[26c6310]">BOD_IRQHandler</a>
 <LI><a href="#[26c5c08]">USB_IRQHandler</a>
 <LI><a href="#[26c62d4]">CAN_IRQHandler</a>
 <LI><a href="#[26c6298]">DMA_IRQHandler</a>
 <LI><a href="#[26c607c]">I2S_IRQHandler</a>
 <LI><a href="#[26c616c]">ENET_IRQHandler</a>
 <LI><a href="#[26c5f14]">RIT_IRQHandler</a>
 <LI><a href="#[26c6040]">MCPWM_IRQHandler</a>
 <LI><a href="#[26c5f50]">QEI_IRQHandler</a>
 <LI><a href="#[26c5fc8]">PLL1_IRQHandler</a>
 <LI><a href="#[26c427c]">__main</a>
 <LI><a href="#[26c03e8]">__I$use$semihosting</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[26c427c]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[26bdea4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[26c4150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[26bdea4]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[26c427c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[26bde68]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26c4150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[26bde2c]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[26bddf0]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[26bdc4c]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26bdc4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[26bdc4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[26bdb5c]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[26c3340]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[26c3ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[26c1810]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[26c1888]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000028))

<P><STRONG><a name="[26c1c48]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[26c1ae0]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[26c1720]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[26c1798]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[26c1b58]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[26c1a68]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[26c2044]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[26c1ea0]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))

<P><STRONG><a name="[26c1e28]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[26c1db0]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[26c1d38]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[26c1cc0]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[26c1f54]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[26c16e4]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002F))

<P><STRONG><a name="[26c1bd0]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[26c19f0]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[26c1fcc]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[26c0730]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[26c0f64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[26bfac4]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[26bf8e4]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[26bf8a8]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[26bfa10]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[26bfb78]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[26bf998]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[26c4150]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[26bde68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[26c427c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[26c3d54]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[26c39d0]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[26c38a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[26c3ca0]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[26c3340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[26c3cdc]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[26c3bec]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; Date_Time_Set &rArr; lcd_num &rArr;  lcd_num (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[26c373c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[26c4678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26c3c28]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[26c2bc0]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[26c373c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[26c0f64]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[26c0730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[26c0fa0]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[26c0f28]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[26c0c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[26c65a4]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c6568]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26c6568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[26c6568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c652c]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26c652c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[26c652c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c64f0]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26c64f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[26c64f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c64b4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26c64b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[26c64b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c6478]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26c6478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[26c6478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c643c]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26c643c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[26c643c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c6400]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26c6400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[26c6400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c63c4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26c63c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[26c63c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c6388]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26c6388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[26c6388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c634c]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26c634c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[26c634c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c6310]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c62d4]"></a>CAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c6298]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c625c]"></a>EINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c6220]"></a>EINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c61e4]"></a>EINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c61a8]"></a>EINT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c616c]"></a>ENET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c6130]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c60f4]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c60b8]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c607c]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c6040]"></a>MCPWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c6004]"></a>PLL0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c5fc8]"></a>PLL1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c5f8c]"></a>PWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c5f50]"></a>QEI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c5f14]"></a>RIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c5ed8]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c5e9c]"></a>SPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c5e60]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c5e24]"></a>SSP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c5de8]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c5dac]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c5d70]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c5d34]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c5cf8]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c5cbc]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c5c80]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c5c44]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c5c08]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c5bcc]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26c6694]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26c38a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[26c43e4]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[26c43a8]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[26c436c]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[26c38a4]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[26c2cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[26c6694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[26c39d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[26c373c]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26c2bc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[26c3bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[26c2cec]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[26c2cb0]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26c38a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[26c2c74]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[26c0c1c]"></a>_sys_exit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26c0f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[26c03e8]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sys_exit.o(.text)
</UL>
<P><STRONG><a name="[26c03ac]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[26c4e34]"></a>delay</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, immsmain.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26c4678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[26c46f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonSelection
<LI><a href="#[26c472c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Servo_Init
<LI><a href="#[26c4768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMMS_init
<LI><a href="#[26c49fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_trig
<LI><a href="#[26c4ccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_strScroll
<LI><a href="#[26c4d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_data
<LI><a href="#[26c4df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_cmd
</UL>

<P><STRONG><a name="[26c4df8]"></a>lcd_cmd</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, immsmain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lcd_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[26c4e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[26c4678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[26c46b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Date_Time_Set
<LI><a href="#[26c46f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonSelection
<LI><a href="#[26c4aec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Date_Time
<LI><a href="#[26c4ccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_strScroll
<LI><a href="#[26c4dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdConfig
</UL>

<P><STRONG><a name="[26c4dbc]"></a>lcdConfig</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, immsmain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lcdConfig &rArr; lcd_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[26c4df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[26c4678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26c4d80]"></a>lcd_data</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, immsmain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lcd_data
</UL>
<BR>[Calls]<UL><LI><a href="#[26c4e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[26c46b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Date_Time_Set
<LI><a href="#[26c4aec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Date_Time
<LI><a href="#[26c4ccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_strScroll
<LI><a href="#[26c4d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_str
<LI><a href="#[26c4d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_num
</UL>

<P><STRONG><a name="[26c4d44]"></a>lcd_num</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, immsmain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20 + In Cycle
<LI>Call Chain = lcd_num &rArr;  lcd_num (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[26c4d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_num
<LI><a href="#[26c4d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_data
</UL>
<BR>[Called By]<UL><LI><a href="#[26c46b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Date_Time_Set
<LI><a href="#[26c4aec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Date_Time
<LI><a href="#[26c4d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_num
</UL>

<P><STRONG><a name="[26c4d08]"></a>lcd_str</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, immsmain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lcd_str &rArr; lcd_data
</UL>
<BR>[Calls]<UL><LI><a href="#[26c4d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_data
</UL>
<BR>[Called By]<UL><LI><a href="#[26c4678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[26c46b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Date_Time_Set
<LI><a href="#[26c46f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonSelection
<LI><a href="#[26c4aec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Date_Time
</UL>

<P><STRONG><a name="[26c4ccc]"></a>lcd_strScroll</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, immsmain.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26c4d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_data
<LI><a href="#[26c4df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_cmd
<LI><a href="#[26c4e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>

<P><STRONG><a name="[26c4c90]"></a>RTC_Setup</STRONG> (Thumb, 64 bytes, Stack size 20 bytes, immsmain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RTC_Setup
</UL>
<BR>[Called By]<UL><LI><a href="#[26c4678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26c4c54]"></a>date</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, immsmain.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26c4aec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Date_Time
</UL>

<P><STRONG><a name="[26c4c18]"></a>month</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, immsmain.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26c4aec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Date_Time
</UL>

<P><STRONG><a name="[26c4bdc]"></a>year</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, immsmain.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26c4aec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Date_Time
</UL>

<P><STRONG><a name="[26c4ba0]"></a>hr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, immsmain.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26c4aec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Date_Time
</UL>

<P><STRONG><a name="[26c4b64]"></a>min</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, immsmain.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26c4aec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Date_Time
</UL>

<P><STRONG><a name="[26c4b28]"></a>sec</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, immsmain.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26c4678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[26c46b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Date_Time_Set
<LI><a href="#[26c4aec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Date_Time
</UL>

<P><STRONG><a name="[26c4aec]"></a>Date_Time</STRONG> (Thumb, 186 bytes, Stack size 8 bytes, immsmain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Date_Time &rArr; lcd_num &rArr;  lcd_num (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[26c4b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec
<LI><a href="#[26c4b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;min
<LI><a href="#[26c4ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr
<LI><a href="#[26c4bdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;year
<LI><a href="#[26c4c18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;month
<LI><a href="#[26c4c54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;date
<LI><a href="#[26c4d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_str
<LI><a href="#[26c4d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_num
<LI><a href="#[26c4d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_data
<LI><a href="#[26c4df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[26c4678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26c4ab0]"></a>Buzzer_Config</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, immsmain.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26c4678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26c4a74]"></a>BuzzerOn</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, immsmain.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26c49fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_trig
</UL>

<P><STRONG><a name="[26c4a38]"></a>BuzzerOff</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, immsmain.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26c49fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_trig
</UL>

<P><STRONG><a name="[26c49fc]"></a>Buzzer_trig</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, immsmain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Buzzer_trig
</UL>
<BR>[Calls]<UL><LI><a href="#[26c4a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuzzerOff
<LI><a href="#[26c4a74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuzzerOn
<LI><a href="#[26c4e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[26c4678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26c49c0]"></a>LED_Config</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, immsmain.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26c4678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26c4984]"></a>order</STRONG> (Thumb, 196 bytes, Stack size 0 bytes, immsmain.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26c4948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatrixOutput
</UL>

<P><STRONG><a name="[26c4948]"></a>MatrixOutput</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, immsmain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = MatrixOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[26c4984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;order
</UL>
<BR>[Called By]<UL><LI><a href="#[26c4678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26c490c]"></a>IR1_Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, immsmain.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26c4678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26c48d0]"></a>ir1_read</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, immsmain.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26c4678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26c4894]"></a>uart_init</STRONG> (Thumb, 188 bytes, Stack size 0 bytes, immsmain.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26c4678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26c4858]"></a>Message_receive</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, immsmain.o(.text), UNUSED)

<P><STRONG><a name="[26c481c]"></a>uart_transmit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, immsmain.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26c4678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[26c46f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonSelection
<LI><a href="#[26c4768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMMS_init
<LI><a href="#[26c47e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Message_send
</UL>

<P><STRONG><a name="[26c47e0]"></a>Message_send</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, immsmain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Message_send
</UL>
<BR>[Calls]<UL><LI><a href="#[26c481c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[26c4678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[26c46f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonSelection
<LI><a href="#[26c4768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMMS_init
</UL>

<P><STRONG><a name="[26c47a4]"></a>inc_dec</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, immsmain.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26c46b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Date_Time_Set
</UL>

<P><STRONG><a name="[26c4768]"></a>IMMS_init</STRONG> (Thumb, 90 bytes, Stack size 4 bytes, immsmain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IMMS_init &rArr; Message_send
</UL>
<BR>[Calls]<UL><LI><a href="#[26c47e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Message_send
<LI><a href="#[26c481c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_transmit
<LI><a href="#[26c4e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[26c4678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26c472c]"></a>Servo_Init</STRONG> (Thumb, 114 bytes, Stack size 4 bytes, immsmain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Servo_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[26c4e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[26c4678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26c46f0]"></a>ButtonSelection</STRONG> (Thumb, 312 bytes, Stack size 8 bytes, immsmain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ButtonSelection &rArr; lcd_str &rArr; lcd_data
</UL>
<BR>[Calls]<UL><LI><a href="#[26c47e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Message_send
<LI><a href="#[26c481c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_transmit
<LI><a href="#[26c4d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_str
<LI><a href="#[26c4df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_cmd
<LI><a href="#[26c4e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[26c4678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26c46b4]"></a>Date_Time_Set</STRONG> (Thumb, 718 bytes, Stack size 8 bytes, immsmain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Date_Time_Set &rArr; lcd_num &rArr;  lcd_num (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[26c47a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inc_dec
<LI><a href="#[26c4b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec
<LI><a href="#[26c4d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_str
<LI><a href="#[26c4d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_num
<LI><a href="#[26c4d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_data
<LI><a href="#[26c4df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[26c4678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26c4678]"></a>main</STRONG> (Thumb, 432 bytes, Stack size 12 bytes, immsmain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = main &rArr; Date_Time_Set &rArr; lcd_num &rArr;  lcd_num (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[26c46b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Date_Time_Set
<LI><a href="#[26c46f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonSelection
<LI><a href="#[26c472c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Servo_Init
<LI><a href="#[26c4768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMMS_init
<LI><a href="#[26c47e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Message_send
<LI><a href="#[26c481c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_transmit
<LI><a href="#[26c4894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[26c48d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ir1_read
<LI><a href="#[26c490c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR1_Config
<LI><a href="#[26c4948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatrixOutput
<LI><a href="#[26c49c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Config
<LI><a href="#[26c49fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_trig
<LI><a href="#[26c4ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Config
<LI><a href="#[26c4aec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Date_Time
<LI><a href="#[26c4b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec
<LI><a href="#[26c4c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Setup
<LI><a href="#[26c4d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_str
<LI><a href="#[26c4dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdConfig
<LI><a href="#[26c4df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_cmd
<LI><a href="#[26c4e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[26c3bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>
<P>
<H3>
Local Symbols
</H3><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
